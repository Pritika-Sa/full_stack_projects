import React, { useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import { Container, Button, Collapse } from "react-bootstrap";
import "./Result.css";

function Result() {
  const { state } = useLocation();
  const navigate = useNavigate();
  const [openIndex, setOpenIndex] = useState(null);

  if (!state) {
    return (
      <Container className="text-center mt-5">
        <h5>No result data found.</h5>
        <Button
          className="gradient-btn mt-3"
          onClick={() => navigate("/dashboard")}
        >
          Go to Dashboard
        </Button>
      </Container>
    );
  }

  const { topic, difficulty = "medium", score, total, responses = [] } = state;

  const radius = 60;
  const circumference = 2 * Math.PI * radius;

  return (
    <div className="result-modern-bg">
      <Container className="py-5 fade-in">
        <div id="pdf-container" className="modern-card p-5">
          {/* Header */}
          <div className="text-center mb-4">
            <h2 className="fw-bold modern-title">AptiTrack - Quiz Report</h2>
            <br />
            <p className="text-muted">
              Topic: <strong>{topic}</strong>
            </p>
            <p className="text-muted">
              Difficulty: <strong>{difficulty}</strong>
            </p>
          </div>

          {/* Circular progress */}
          <div className="score-ring mx-auto">
            <svg width="150" height="150">
              <defs>
                <linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="0%">
                  <stop offset="0%" stopColor="#0d9488" />
                  <stop offset="100%" stopColor="#14b8a6" />
                </linearGradient>
              </defs>

              {/* Background Circle */}
              <circle className="bg" cx="75" cy="75" r={radius} />

              {/* Progress Circle */}
              <circle
                className="progress"
                cx="75"
                cy="75"
                r={radius}
                strokeDasharray={circumference}
                strokeDashoffset={
                  circumference - (score / total) * circumference
                }
              />

              {/* Score Text */}
              <text x="75" y="75" className="score-text">
                {score}/{total}
              </text>
            </svg>
          </div>

          {/* Questions accordion */}
          <div className="question-accordion mt-4">
            {responses.map((res, idx) => (
              <div
                key={idx}
                className={`accordion-item ${
                  res.isCorrect ? "correct" : "wrong"
                }`}
              >
                <div
                  className="accordion-header"
                  onClick={() =>
                    setOpenIndex(openIndex === idx ? null : idx)
                  }
                >
                  <span>{`Q${idx + 1}. ${res.question}`}</span>
                  <span>{openIndex === idx ? "â–²" : "â–¼"}</span>
                </div>

                <Collapse in={openIndex === idx}>
                  <div className="accordion-body">
                    <p>
                      <strong>Your Answer:</strong>{" "}
                      <span
                        className={
                          res.isCorrect ? "text-success" : "text-danger"
                        }
                      >
                        {res.selectedOption}
                      </span>
                    </p>

                    {!res.isCorrect && (
                      <p>
                        <strong>Correct Answer:</strong>{" "}
                        <span className="text-success">
                          {res.correctAnswer}
                        </span>
                      </p>
                    )}

                    <p>
                      <strong>Explanation:</strong> {res.explanation}
                    </p>
                  </div>
                </Collapse>
              </div>
            ))}
          </div>

          {/* Footer */}
          <p className="text-center mt-4 small text-muted">
            Generated by AptiTrack Â© 2025
          </p>
        </div>

        {/* Back Button */}
        <div className="d-flex justify-content-center mt-4">
          <Button
            className="gradient-btn"
            onClick={() => navigate("/dashboard")}
          >
            ðŸ”™ Back to Dashboard
          </Button>
        </div>
      </Container>
    </div>
  );
}

export default Result;
